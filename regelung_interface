class RegelungsInterface:
    def __init__(self):
        self._robot_pos = {'x': None, 'y': None, 'z': None}
        self._object_pos = {'x': None, 'y': None}
        self._velocity = None
        self._object_class = None
        self._target_position = {'x': None, 'y': None, 'z': None}
        self._gripper_is_activated = False

    # Getter and setter methods for encapsulated attributes
    def get_robot_pos(self):
        return self._robot_pos
    
    def set_robot_pos(self, pos):
        self._robot_pos = pos

    def get_object_pos(self):
        return self._object_pos
    
    def set_object_pos(self, pos):
        self._object_pos = pos

    def get_velocity(self):
        return self._velocity
    
    def set_velocity(self, velocity):
        self._velocity = velocity

    def get_object_class(self):
        return self._object_class
    
    def set_object_class(self, object_class):
        self._object_class = object_class

    def get_target_position(self):
        return self._target_position
    
    def set_target_position(self, target_pos):
        self._target_position = target_pos

    def get_gripper_is_activated(self):
        return self._gripper_is_activated
    
    def set_gripper_is_activated(self, activated):
        self._gripper_is_activated = activated
